<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="3" table-class="display nowrap">

<css lib="datatables columncontrol datetime" />
<js lib="jquery datatables columncontrol datetime">
<![CDATA[

new DataTable('#example', {
	columnControl: [
		{
			target: 0,
			content: ['orderStatus']
		},
		{
			target: 1,
			content: ['searchText']
		}
	],
	columnDefs: [
		{
			targets: [3, 5],
			columnControl: {
				target: 1,
				content: ['searchNumber']
			}
		},
		{
			targets: [4],
			columnControl: {
				target: 1,
				content: ['searchDateTime']
			}
		}
	],
	ordering: {
		indicators: false
	}
});
]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	columnControl: [
		{
			target: 0,
			content: ['orderStatus']
		},
		{
			target: 1,
			content: ['searchText']
		}
	],
	columnDefs: [
		{
			targets: [3, 5],
			columnControl: {
				target: 1,
				content: ['searchNumber']
			}
		},
		{
			targets: [4],
			columnControl: {
				target: 1,
				content: ['searchDateTime']
			}
		}
	],
	ordering: {
		indicators: false
	}
});
]]>
</js-vanilla>

<title lib="ColumnControl">Manual type assignment</title>

<info><![CDATA[

This example is [similar to the auto type detection one](./autoType.html), but rather than allowing ColumnControl and DataTables to figure out the data type, the search type is assigned manually. The key piece of information here is to know that `-content search` is simply a wrapper around data type specific search types - it picks one of `-content searchText`, `-content searchNumber` or `-content searchDateTime` based on the [column's data type](https://datatables.net/manual/data/types).

In this example, the search types are applied directly. This is done by using `-init columns.columnControl` option to assign a specific search type to given columns as [detailed in the "Column specific configuration" example](../initialisation/columnSpecific.html).

]]></info>

</dt-example>
