<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="7" table-class="display nowrap">

<css lib="datatables columncontrol datetime" />
<js lib="jquery datatables columncontrol datetime">
<![CDATA[

$('#example').DataTable({
	ajax: '../../../../examples/ajax/data/objects.txt',
	columnControl: ['order', 'searchDropdown'],
	columns: [
		{ data: 'name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'extn' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	ordering: {
		indicators: false,
		handler: false
	}
});
]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	ajax: '../../../../examples/ajax/data/objects.txt',
	columnControl: ['order', 'searchDropdown'],
	columns: [
		{ data: 'name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'extn' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	ordering: {
		indicators: false,
		handler: false
	}
});
]]>
</js-vanilla>

<title lib="ColumnControl">Dropdown: Search only</title>

<info><![CDATA[

For some table designs to might not want to have the search input always visible, as per the [previous examples](./autoType.html) in this section. Instead, a common pattern is to place the search input into a dropdown, which is readily done with the `-content searchDropdown` content type, as shown in this example.

`-content searchDropdown` is simply a wrapper around `-content dropdown` with the icon set to be a magnifying glass. If you wish to mix search in the dropdown with other content, [see the next example](./dropdown-mixed.html).

]]></info>

</dt-example>
