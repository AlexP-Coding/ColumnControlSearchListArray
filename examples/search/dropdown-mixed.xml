<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="8" table-class="display nowrap">

<css lib="datatables columncontrol datetime" />
<js lib="jquery datatables columncontrol datetime">
<![CDATA[

new DataTable('#example', {
	ajax: '../../../../examples/ajax/data/objects.txt',
	columnControl: ['order', ['orderAsc', 'orderDesc', 'spacer', 'search']],
    columns: [
        { data: 'name' },
        { data: 'position' },
        { data: 'office' },
        { data: 'extn' },
        { data: 'start_date' },
        { data: 'salary' }
    ],
	ordering: {
		indicators: false,
		handler: false
	}
});
]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	ajax: '../../../../examples/ajax/data/objects.txt',
	columnControl: ['order', ['orderAsc', 'orderDesc', 'spacer', 'search']],
    columns: [
        { data: 'name' },
        { data: 'position' },
        { data: 'office' },
        { data: 'extn' },
        { data: 'start_date' },
        { data: 'salary' }
    ],
	ordering: {
		indicators: false,
		handler: false
	}
});
]]>
</js-vanilla>

<title lib="ColumnControl">Dropdown: With other content</title>

<info><![CDATA[

This example shows the search input placed into a dropdown with other content. Recall from [the initialisation examples](../initialisation/dropdowns.html) that a dropdown is created simply by using an inner array inside the ColumnControl content array. This example demonstrates that with `-content search` along with a few other content types.

]]></info>

</dt-example>
