<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="5" framework="jqueryui">

<css lib="datatables columncontrol"/>
<js lib="jquery datatables columncontrol">
<![CDATA[

$('#example').DataTable({
	columnControl: [
		{
			target: 0,
			content: [
				'order',
				[
					'orderAsc',
					'orderDesc',
					'spacer',
					'orderAddAsc',
					'orderAddDesc',
					'spacer',
					'orderRemove'
				]
			]
		},
		{
			target: 1,
			content: ['search']
		}
	],
	ordering: {
		handler: false,
		indicators: false
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	columnControl: [
		{
			target: 0,
			content: [
				'order',
				[
					'orderAsc',
					'orderDesc',
					'spacer',
					'orderAddAsc',
					'orderAddDesc',
					'spacer',
					'orderRemove'
				]
			]
		},
		{
			target: 1,
			content: ['search']
		}
	],
	ordering: {
		handler: false,
		indicators: false
	}
});

]]>
</js-vanilla>

<title lib="ColumnControl">jQuery UI</title>

<info><![CDATA[

This example shows DataTables and ColumnControl with jQuery UI styling integration. Please note that all of the general examples for ColumnControl can be styled with jQuery UI or any of the other styling integration using the options at the top right of the window, however, this example is explicitly jQuery UI styled.

ColumnControl is setup in this example to show a range of content type with the jQuery UI styling. Specifically the `-content order` button is shown and followed by a dropdown with a list of various ordering control buttons. A second row in the header is used to display search inputs.

]]></info>

</dt-example>


