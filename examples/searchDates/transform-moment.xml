<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html-date-fmt" order="7" table-class="display nowrap">

<css lib="datatables columncontrol datetime" />
<js lib="jquery datatables columncontrol moment datetime">
<![CDATA[

new DataTable('#example', {
	columnControl: [
		{
			target: 0,
			content: ['orderStatus']
		},
		{
			target: 1,
			content: ['search']
		}
	],
	columnDefs: [
		{
			targets: [4],
			render: DataTable.render.datetime('D MMM YYYY', 'MMM D, YY', 'en')
		}
	],
	ordering: {
		indicators: false
	}
});
]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	columnControl: [
		{
			target: 0,
			content: ['orderStatus']
		},
		{
			target: 1,
			content: ['search']
		}
	],
	columnDefs: [
		{
			targets: [4],
			render: DataTable.render.datetime('D MMM YYYY', 'MMM D, YY', 'en')
		}
	],
	ordering: {
		indicators: false
	}
});
]]>
</js-vanilla>

<title lib="ColumnControl">Format transform (Moment.js)</title>

<info><![CDATA[

This example matches the DataTables [Format transform](https://datatables.net/examples/datetime/transform-moment.html) example [using Moment.js for date formatting](https://momentjs.com/), with ColumnControl added for its ordering button and search input.

In this case, the data source for the table has the date information in a non-ISO8601 format and we want to transform it into a different format using a render. The _Start date_ search input matches the format of the display date data.

]]></info>

</dt-example>
