<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="3">

<css lib="datatables columncontrol colreorder" />
<js lib="jquery datatables columncontrol colreorder">
<![CDATA[
$('#example').DataTable({
	colReorder: {
        columns: ':not(:first-child, :last-child)'
    },
	columnControl: ['order', 'reorder'],
	columnDefs: [{
		targets: [0, -1],
		columnControl: ['order']
	}],
	ordering: {
		indicators: false,
		handler: false
	}
});
]]>
</js>

<js-vanilla>
<![CDATA[
new DataTable('#example', {
	colReorder: {
        columns: ':not(:first-child, :last-child)'
    },
	columnControl: ['order', 'reorder'],
	columnDefs: [{
		targets: [0, -1],
		columnControl: ['order']
	}],
	ordering: {
		indicators: false,
		handler: false
	}
});
]]>
</js-vanilla>

<title lib="ColumnControl">Selected columns</title>

<info><![CDATA[

[ColReorder](https://datatables.net/extensions/colreorder) has a number of options available, such as `-init colReorder.columns` to define which columns reordering should be available on. In such a case you wouldn't wish to display reordering icons in ColumnControl for columns which can't be reordered.

We saw [in the initialisation examples](./initialisation/columnSpecific.html) how you can provide a ColumnControl configuration specific to targeted columns through the `-init columns.columnControl` option. In this case we wish to use that to display only the `-content order` button for these columns.

]]></info>

</dt-example>
