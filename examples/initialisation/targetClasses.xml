<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="5">

<css lib="datatables columncontrol" />
<js lib="jquery datatables columncontrol">
<![CDATA[

$('#example').DataTable({
	columnControl: [
		{
			target: 0,
			className: 'dtcc-row_no-bottom-border'
		},
		{
			target: 1,
			className: 'dtcc-row_no-top-padding',
			content: ['search']
		}
	]
});
]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	columnControl: [
		{
			target: 0,
			className: 'dtcc-row_no-bottom-border'
		},
		{
			target: 1,
			className: 'dtcc-row_no-top-padding',
			content: ['search']
		}
	]
});
]]>
</js-vanilla>

<title lib="ColumnControl">Assigning class names to targets</title>

<info><![CDATA[

When using multiple rows, as [in the last example](./multipleRows.html) you may wish to add extra styling to cells in a row to tweak their visual appearance. This can help the end user to make connections - in this example the border is removed and padding reduced between the title cells and the `-content search` input elements.

This is done through the `-init columnControl.className` option. The class name(s) given here are applied to the `-tag tr` element for the target row.

Next: [Footer target](./footer.html).

]]></info>

</dt-example>
