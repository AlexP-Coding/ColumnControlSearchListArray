<?xml version="1.0" encoding="UTF-8" ?>
<dt-button library="ColumnControl">
	<name>colVisDropdown</name>
	<summary>A dropdown wrapper for the `colVis` content type.</summary>
	<since>1.0.0</since>

	<description>
		This content type matches `-content colVis`, but places it inside a dropdown. It is provided for convenience and it is relatively common to have the column visibility toggle buttons in their own dropdown. It is simply an alias of:

		```js
		{
			extend: 'dropdown',
			text: 'Column visibility',
			icon: 'columns',
			content: [{
				extend: 'colVis'
				// ... options from `colVis`
			}]
		}
		```

		Note that this content type provides the same options as `-content colVis` - it simply passes them through, so you can still control which columns are selected, etc. For a full list of the options available, please refer to `-content colVis`. Only the dropdown specific options are shown on this page.


		### Display

		This content type can be used at any level in ColumnControl. At the top level it will create a dropdown icon. Inside a dropdown, it will create a nested dropdown.
	</description>

	<option type="string" name="icon" default="columns">
		Button icon. Can take the name of any icon available in `DataTable.ColumnControl.icons` (which is a writeable object containing SVG icons).
	</option>

	<option type="string" name="text" default="Column visibility">
		Text of the dropdown button - shown when it is in a dropdown itself. Can also be set by the `colVisDropdown` key of `-init language.columnControl`, which will take priority if set.
	</option>


	<example title="List columns in a dropdown, allowing their visibility to be toggled"><![CDATA[
new DataTable('#example', {
    columnControl: ['colVisDropdown']
});
]]></example>

	<example title="Column visibility dropdown and ordering icon"><![CDATA[
new DataTable('#example', {
    columnControl: [
        'order',
        'colVisDropdown'
    ],
    ordering: {
        indicators: false,
        handler: false
    }
});
]]></example>


	<example title="Nested dropdown"><![CDATA[
new DataTable('#example', {
    columnControl: [
        'order',
        [
           'orderAsc',
		   'orderDesc',
		   'colVisDropdown'
        ]
    ]
    ordering: {
        indicators: false,
        handler: false
    }
});
]]></example>
</dt-button>
